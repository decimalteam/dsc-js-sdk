import { clientBurnCoin, clientBuyCoin, clientCancelRedelegationData, clientCreateValidator, clientEditMetadata, clientEditValidator, clientMsgBurnNft, clientMsgCancelRedelegationNft, clientMsgCancelUndelegate, clientMsgCancelUndelegationNft, clientMsgCreateCoin, clientMsgCreateWallet, clientMsgDelegate, clientMsgDelegateNft, clientMsgMultiSendCoin, clientMsgNftMint, clientMsgRedelegateNft, clientMsgSendCoin, clientMsgSwapInit, clientMsgSwapRedeem, clientMsgTransferNft, clientMsgUndelegate, clientMsgUndelegateNft, clientMsgUpdateCoin, clientMultisigSignTx, clientNftUpdateReserve, clientRedelegationData, clientReturnLegacy, clientSellAllCoin, clientSellCoin, clientSetOnlineData } from "../interfaces/clientInterfaces";
import { MsgCreateCoin, MsgSendCoin, MsgMultiSendCoin, MsgUpdateCoin, MsgBuyCoin, MsgSellCoin, MsgSellAllCoin, MsgBurnCoin } from "../types/decimal/coin/v1/tx";
import { generatedWallet } from "../wallet";
import { MsgCreateWallet, MsgSignTransaction } from "../types/decimal/multisig/v1/tx";
import { MsgBurnToken, MsgMintToken, MsgSendToken, MsgUpdateReserve, MsgUpdateToken } from "../types/decimal/nft/v1/tx";
import { MsgInitializeSwap, MsgRedeemSwap } from "src/types/decimal/swap/v1/tx";
import { MsgCancelRedelegation, MsgCancelRedelegationNFT, MsgCancelUndelegation, MsgCancelUndelegationNFT, MsgCreateValidator, MsgDelegate, MsgDelegateNFT, MsgEditValidator, MsgRedelegate, MsgRedelegateNFT, MsgSetOffline, MsgSetOnline, MsgUndelegate, MsgUndelegateNFT } from "src/types/validator/v1/tx";
import Wallet from "../wallet";
import { MsgReturnLegacy } from "src/types/decimal/legacy/v1/tx";
export declare function sendCoinData(data: clientMsgSendCoin, wallet: generatedWallet): MsgSendCoin;
export declare function updateCoinData(data: clientMsgUpdateCoin, wallet: generatedWallet): MsgUpdateCoin;
export declare function createCoinData(data: clientMsgCreateCoin, wallet: generatedWallet): MsgCreateCoin;
export declare function multiSendCoinData(data: clientMsgMultiSendCoin[], wallet: generatedWallet): MsgMultiSendCoin;
export declare function createWalletData(data: clientMsgCreateWallet, wallet: generatedWallet): MsgCreateWallet;
export declare function mintNftData(data: clientMsgNftMint, wallet: generatedWallet): MsgMintToken;
export declare function transferNftData(data: clientMsgTransferNft, wallet: generatedWallet): MsgSendToken;
export declare function burnNftData(data: clientMsgBurnNft, wallet: generatedWallet): MsgBurnToken;
export declare function buyCoinData(data: clientBuyCoin, wallet: generatedWallet): MsgBuyCoin;
export declare function sellCoinData(data: clientSellCoin, wallet: generatedWallet): MsgSellCoin;
export declare function sellAllCoinData(data: clientSellAllCoin, wallet: generatedWallet): MsgSellAllCoin;
export declare function burnCoinData(data: clientBurnCoin, wallet: generatedWallet): MsgBurnCoin;
export declare function multisigSignTxData(data: clientMultisigSignTx, wallet: generatedWallet): MsgSignTransaction;
export declare function nftUpdateReserveData(data: clientNftUpdateReserve, wallet: generatedWallet): MsgUpdateReserve;
export declare function nftEditMetadata(data: clientEditMetadata, wallet: generatedWallet): MsgUpdateToken;
export declare function swapInitData(data: clientMsgSwapInit, wallet: generatedWallet): MsgInitializeSwap;
export declare function swapRedeemData(data: clientMsgSwapRedeem, wallet: generatedWallet): MsgRedeemSwap;
export declare function delegateData(data: clientMsgDelegate, wallet: generatedWallet): MsgDelegate;
export declare function unbondData(data: clientMsgUndelegate, wallet: generatedWallet): MsgUndelegate;
export declare function cancelUnbondingData(data: clientMsgCancelUndelegate, wallet: generatedWallet): MsgCancelUndelegation;
export declare function redelegateData(data: clientRedelegationData, wallet: generatedWallet): MsgRedelegate;
export declare function cancelRedelegationData(data: clientCancelRedelegationData, wallet: generatedWallet): MsgCancelRedelegation;
export declare function nftDelegateData(data: clientMsgDelegateNft, wallet: generatedWallet): MsgDelegateNFT;
export declare function nftUnbondData(data: clientMsgUndelegateNft, wallet: generatedWallet): MsgUndelegateNFT;
export declare function cancelNftUnbondingData(data: clientMsgCancelUndelegationNft, wallet: generatedWallet): MsgCancelUndelegationNFT;
export declare function nftRedelegateData(data: clientMsgRedelegateNft, wallet: generatedWallet): MsgRedelegateNFT;
export declare function nftCancelRedelegationData(data: clientMsgCancelRedelegationNft, wallet: generatedWallet): MsgCancelRedelegationNFT;
export declare function createValidatorData(data: clientCreateValidator, wallet: Wallet): MsgCreateValidator;
export declare function editValidatorData(data: clientEditValidator, wallet: Wallet): MsgEditValidator;
export declare function setOnlineData(data: clientSetOnlineData): MsgSetOnline;
export declare function setOfflineData(data: clientSetOnlineData): MsgSetOffline;
export declare function returnLegacyData(data: clientReturnLegacy, wallet: Wallet): MsgReturnLegacy;
export declare const dataToProto: {
    [x: string]: typeof sendCoinData | typeof burnCoinData | typeof updateCoinData | typeof createCoinData | typeof multiSendCoinData | typeof createWalletData | typeof mintNftData | typeof transferNftData | typeof burnNftData | typeof buyCoinData | typeof sellCoinData | typeof sellAllCoinData | typeof multisigSignTxData | typeof nftUpdateReserveData | typeof nftEditMetadata | typeof swapInitData | typeof swapRedeemData | typeof delegateData | typeof cancelUnbondingData | typeof redelegateData | typeof cancelRedelegationData | typeof nftDelegateData | typeof cancelNftUnbondingData | typeof nftRedelegateData | typeof nftCancelRedelegationData | typeof createValidatorData | typeof editValidatorData | typeof setOnlineData;
};
